---
- name: Delete user data if `cleanup_data` is true
  shell: kubectl --server=https://pu.mk8scluster-e00a57k7rk5jp2fv7v.mk8s.eu-north1.nebius.cloud:443 patch aistores.ais.nvidia.com ais -n {{ cluster }} --type=merge -p '{"spec":{"cleanupData":true}}'
  ignore_errors: true
  when: cleanup_data | default(false) | bool

- name: Delete metadata if `cleanup_metadata` is true
  shell: kubectl --server=https://pu.mk8scluster-e00a57k7rk5jp2fv7v.mk8s.eu-north1.nebius.cloud:443 patch aistores.ais.nvidia.com ais -n {{ cluster }} --type=merge -p '{"spec":{"cleanupMetadata":true}}'
  ignore_errors: true
  when: cleanup_metadata | default(false) | bool

- name: Get node names of all pods {{ cluster }} namespace
  shell: >
    kubectl get pods -n {{ cluster }} -o=jsonpath='{.items[*].spec.nodeName}' | tr ' ' '\n' | sort -u
  register: pod_node_names
  changed_when: false
  when: cleanup_metadata | default(false) | bool

- name: List PVs to be deleted
  shell: |
    kubectl get pvc -n {{ cluster }} -o json | 
    jq -r '.items[] | 
    select(.spec.storageClassName == "{{ storage_class_name }}") | 
    .spec.volumeName'
  register: pvs_to_delete
  changed_when: false
  when: cleanup_metadata | default(false) | bool

- name: Delete cluster
  import_role:
    name: ais_delete_cluster

- name: Delete specific PVs
  shell: kubectl --server=https://pu.mk8scluster-e00a57k7rk5jp2fv7v.mk8s.eu-north1.nebius.cloud:443 delete pv {{ item }}
  loop: "{{ pvs_to_delete.stdout_lines }}"
  when: 
    - cleanup_metadata | default(false) | bool
    - pvs_to_delete.stdout_lines | length > 0
  register: delete_pv_result
  changed_when: "'deleted' in delete_pv_result.stdout"

- name: Convert node names to a list
  set_fact:
    node_name_list: "{{ pod_node_names.stdout.split('\n') }}"
  when: 
    - cleanup_metadata | default(false) | bool
    - pod_node_names.stdout != ""

- name: Unlabel all nodes
  shell: >
    kubectl label nodes {{ node_name_list | join(' ') }} nvidia.com/ais-proxy- nvidia.com/ais-target-
  register: unlabel_result
  changed_when: "'labeled' in unlabel_result.stdout or 'not labeled' not in unlabel_result.stdout"
  when:
    - cleanup_metadata | default(false) | bool
    - node_name_list | length > 0