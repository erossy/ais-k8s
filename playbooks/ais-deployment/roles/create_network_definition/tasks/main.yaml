- name: Parse network attachment list
  set_fact:
    attachment_list: "{{ network_attachment.split(',') | map('trim') | list }}"

- name: Parse network interface list
  set_fact:
    interface_list: "{{ network_interface.split(',') | map('trim') | list }}"

- name: Ensure all interface names are unique
  fail: 
    msg: "Network interface list has duplicate entries!"
  when: interface_list | length != interface_list | unique | length

- name: Ensure all attachment names are unique
  fail: 
    msg: "Network attachment list has duplicate entries!"
  when: attachment_list | length != attachment_list | unique | length

- name: Ensure network_attachment and network_interface have the same number of entries
  fail: 
    msg: "network_attachment and network_interface must be the same length!"
  when: attachment_list | length != interface_list | length

- name: Copy network attachment definition files
  copy:
    src: "{{ item }}"
    dest: "/tmp"
    mode: 0777
  loop:
    - "create-network-definition.sh"
    - "nad.template.yaml"

# Fetch the files to jumphost
- name: Copy network attachment script to jumphost
  fetch:
    src: "/tmp/create-network-definition.sh"
    dest: "/tmp/create-network-definition.sh"
    flat: yes

- name: Copy network attachment template to jumphost
  fetch:
    src: "/tmp/nad.template.yaml"
    dest: "/tmp/nad.template.yaml"
    flat: yes

- name: Apply network attachment definition
  shell: "NAMESPACE={{ attachment_namespace }} NAME={{ item.0 }} INTERFACE={{ item.1 }} /tmp/create-network-definition.sh"
  loop: "{{ attachment_list | zip(interface_list) | list }}"
  delegate_to: localhost